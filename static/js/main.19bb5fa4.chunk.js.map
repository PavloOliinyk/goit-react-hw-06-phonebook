{"version":3,"sources":["ContactList/Contact/Contact.module.css","Filter/Filter.module.css","ContactList/ContactList.module.css","ContactForm/ContactForm.module.css","Container/Container.module.css","Container/Container.js","redux/actions.js","ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","ContactList/Contact/Contact.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","data","payload","id","uuidv4","deleteContact","filterContact","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","e","target","value","reset","onSubmit","preventDefault","some","contact","includes","window","alert","background","screen","screenHeader","screenHeaderLeft","screenHeaderButton","close","maximize","minimize","screenHeaderRight","screenHeaderEllipsis","screenBody","screenBodyItem","appFormGroup","type","pattern","title","required","onChange","appFormControl","appFormButton","Filter","filter","currentTarget","ContactList","cardContainer","Contact","card","cardContent","cardInfo","cardButton","onClick","App","filteredContacts","toLowerCase","map","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.19bb5fa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Contact_card__1-kej\",\"cardContent\":\"Contact_cardContent__1TtvD\",\"cardButton\":\"Contact_cardButton__fliZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenBodyItem\":\"Filter_screenBodyItem__2LAgR\",\"left\":\"Filter_left__1jXIr\",\"appFormGroup\":\"Filter_appFormGroup__1za8M\",\"appFormControl\":\"Filter_appFormControl__Neqdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2pXgy\",\"cardContainer\":\"ContactList_cardContainer__KodA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ContactForm_background__3Xrtl\",\"container\":\"ContactForm_container__i-n1b\",\"screen\":\"ContactForm_screen__31mdY\",\"screenHeader\":\"ContactForm_screenHeader__3CMHk\",\"screenHeaderLeft\":\"ContactForm_screenHeaderLeft__3Sw6C\",\"screenHeaderButton\":\"ContactForm_screenHeaderButton__3NlJp\",\"close\":\"ContactForm_close__35y2c\",\"maximize\":\"ContactForm_maximize__2MABO\",\"minimize\":\"ContactForm_minimize__1-_hc\",\"screenHeaderRight\":\"ContactForm_screenHeaderRight__2T_Er\",\"screenHeaderEllipsis\":\"ContactForm_screenHeaderEllipsis__10aqd\",\"screenBody\":\"ContactForm_screenBody__PDvWP\",\"screenBodyItem\":\"ContactForm_screenBodyItem__eeL41\",\"left\":\"ContactForm_left__zJtmE\",\"appTitle\":\"ContactForm_appTitle__kz2ld\",\"appContact\":\"ContactForm_appContact__BU7vX\",\"appFormGroup\":\"ContactForm_appFormGroup__1jWYL\",\"appFormControl\":\"ContactForm_appFormControl__XMxEz\",\"appFormButton\":\"ContactForm_appFormButton__c3_Sg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3142n\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contact/add', data => ({\n  payload: {\n    ...data,\n    id: uuidv4(),\n  },\n}));\n\nexport const deleteContact = createAction('contact/delete');\nexport const filterContact = createAction('contact/filter');\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../redux/actions';\nimport s from './ContactForm.module.css';\n\n// const formSubmitHandler = data => {\n\n//   const isNotUniqueContact = contacts.some(contact =>\n//     contact.name.includes(name),\n//   );\n\n//   if (isNotUniqueContact) {\n//     window.alert(`${name} is already in contacts`);\n//     return;\n//   }\n\n// };\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isNotUniqueContact = contacts.some(contact =>\n      contact.name.includes(name),\n    );\n\n    if (isNotUniqueContact) {\n      window.alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.background}>\n        <div className={s.container}>\n          <div className={s.screen}>\n            <div className={s.screenHeader}>\n              <div className={s.screenHeaderLeft}>\n                <div className={`${s.screenHeaderButton} ${s.close}`}></div>\n                <div className={`${s.screenHeaderButton} ${s.maximize}`}></div>\n                <div className={`${s.screenHeaderButton} ${s.minimize}`}></div>\n              </div>\n              <div className={s.screenHeaderRight}>\n                <div className={s.screenHeaderEllipsis}></div>\n                <div className={s.screenHeaderEllipsis}></div>\n                <div className={s.screenHeaderEllipsis}></div>\n              </div>\n            </div>\n            <div className={s.screenBody}>\n              <div className={s.screenBodyItem}>\n                <label className={s.appFormGroup}>\n                  Name\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                    className={s.appFormControl}\n                  />\n                </label>\n                <label className={s.appFormGroup}>\n                  Number\n                  <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                    className={s.appFormControl}\n                  />\n                </label>\n                <button className={s.appFormButton}>Add contact</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../redux/actions';\n\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.screenBodyItem}>\n      <label className={s.appFormGroup}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.currentTarget.value))}\n          className={s.appFormControl}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import s from './ContactList.module.css';\r\n\r\nfunction ContactList({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <ul className={`list ${s.cardContainer}`}>{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport s from './Contact.module.css';\n\nfunction Contact({ contact: { name, number, id } }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.card}>\n      <div className={s.cardContent}>\n        <p className={s.cardInfo}>{name}</p>\n        <p className={s.cardInfo}>{number}</p>\n        <button\n          className={s.cardButton}\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete contact\n        </button>\n      </div>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\n\nexport default Contact;\n","import { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Container from './Container';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport Contact from './ContactList/Contact';\n\nfunction App() {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const filteredContacts = [...contacts].filter(({ name }) =>\n    name.toLowerCase().includes(filter),\n  );\n\n  return (\n    <Container>\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n\n      <ContactList>\n        {filteredContacts.map(contact => (\n          <Contact key={uuidv4()} contact={contact} />\n        ))}\n      </ContactList>\n    </Container>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { addContact, deleteContact, filterContact } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst contacts = combineReducers({\n  items,\n  filter,\n});\n\nexport default contacts;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contacts from './reducers';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contacts),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}